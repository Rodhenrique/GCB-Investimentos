[{"C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\index.tsx":"1","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\App.tsx":"2","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\routers.tsx":"3","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\services\\auth.tsx":"4","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\views\\Login\\index.tsx":"5","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\views\\Administrador\\index.tsx":"6","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\componentes\\header.tsx":"7"},{"size":197,"mtime":1611341852968,"results":"8","hashOfConfig":"9"},{"size":171,"mtime":1611344857985,"results":"10","hashOfConfig":"9"},{"size":1169,"mtime":1611344933791,"results":"11","hashOfConfig":"9"},{"size":738,"mtime":1611465684248,"results":"12","hashOfConfig":"9"},{"size":2052,"mtime":1611351522663,"results":"13","hashOfConfig":"9"},{"size":14888,"mtime":1611501338139,"results":"14","hashOfConfig":"9"},{"size":1489,"mtime":1611465691792,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vtukaw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\index.tsx",[],["36","37"],"C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\App.tsx",[],"C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\routers.tsx",["38"],"import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { parseJWT } from './services/auth';\r\nimport Panel from './views/Administrador';\r\nimport Login from './views/Login';\r\n\r\nfunction Routers() {\r\n    interface RouteProps {\r\n        component: any;\r\n        path: any;\r\n    }\r\n\r\n    const RotaAdm: React.FC<RouteProps> = ({ component: Component, path, ...rest }) => {\r\n        var token = localStorage.getItem(\"Gcb-Caren-Token\");\r\n        return (\r\n            <Route\r\n                render={props => ((token !== undefined || token !== null) && parseJWT() == 1) ?\r\n                    (\r\n                        <Component path={path}  {...rest} {...props} />\r\n                    ) : (\r\n                        <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n                    )\r\n                } />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login} />\r\n                <RotaAdm path=\"/Panel\" component={Panel}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routers;","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\services\\auth.tsx",[],"C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\views\\Login\\index.tsx",["39","40"],"import React, { useState } from 'react';\r\nimport './style.css';\r\nimport logo from '../../assets/imagens/logotipo.png';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { stringify } from 'querystring';\r\n\r\nfunction Login(){\r\n    let history = useHistory();\r\n\r\n    const [email, setEmail] = useState(\"\"); \r\n    const [senha, setSenha] = useState(\"\"); \r\n\r\n    const login =()=>{\r\n\r\n        const login = {\r\n            email: email,\r\n            senha: senha\r\n        };\r\n        const url = \"http://localhost:5000/api/Login\";\r\n\r\n        fetch(url,{\r\n            method: 'POST',\r\n            body: JSON.stringify(login),\r\n            headers: {\r\n                \"content-type\": \"application/json\", \r\n            },\r\n        })\r\n        .then((response) => response.json())\r\n            .then((dados) => {\r\n                if (dados.token != undefined) {\r\n                    localStorage.setItem(\"Gcb-Caren-Token\", dados.token); \r\n                    console.log(dados.token);\r\n                    history.push(\"/Panel\"); \r\n                } else alert(\"Email ou senha invÃ¡lidos\"); \r\n            })\r\n            \r\n            .catch((error) => console.error(error)); \r\n    };\r\n\r\n    return(\r\n    <div>\r\n       <div className=\"login-container\">\r\n        <div className=\"login-panel\">\r\n            <form  onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        login();\r\n                    }}>\r\n                    <img className=\"logo\" src={logo} alt=\"Logo da empresa\"/>\r\n                <div className=\"inputs-container d-flex flex-column\">\r\n                    <input name=\"email\" type=\"email\" placeholder=\"Digite seu email:\" onChange={(e) => setEmail(e.target.value)}/>\r\n                    <input name=\"senha\" type=\"password\" placeholder=\"Digite sua senha:\" onChange={(e) => setSenha(e.target.value)} />\r\n                </div>\r\n                <input className=\"button-submit\" value=\"Entrar\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Login;","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\views\\Administrador\\index.tsx",["41","42","43","44","45","46","47","48","49","50","51"],"import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport close from '../../assets/imagens/close.svg';\r\nimport settigs from '../../assets/imagens/settigs.svg';\r\nimport lupa from '../../assets/imagens/lupa.svg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../../componentes/header';\r\n\r\nfunction Panel(){\r\n    let history = useHistory();\r\n\r\n    const [medicos, setMedicos] = useState([]); \r\n    const [medicoNome, setmedicoNome] = useState(''); \r\n    const [botao, setBotao] = useState(''); \r\n    const [nome, setNome] = useState(''); \r\n    const[email,setEmail] = useState('');\r\n    const[crm, setCrm] = useState('');\r\n    const[senha, setSenha] = useState('');\r\n    const[dataNascimento, setData] = useState('');\r\n    const[teleFixo, setTeleFixo] = useState('');\r\n    const[celular, setCelular] = useState('');\r\n    const[cep, setCep] = useState('');\r\n    const[logradouro, setLogradouto] = useState('');\r\n    const[bairro, setBairro] = useState('');\r\n    const[localidade,setLocalidade] = useState('');\r\n    const[uf,setUf] = useState('');\r\n    const[numero, setNumero] = useState('');\r\n    const [showModal, setShowModel] = useState(false); \r\n    const[especialidades, setEspecialidade] = useState([] as any);\r\n    const[status, setStatus] = useState(false);\r\n    const[id, setId] = useState('');\r\n    const[itemEspecial, setItemEspecial] = useState('');\r\n    const[selects, setSelects] = useState([] as any);\r\n    const[medicoEspecialidades, setMedicoEspecialidades] = useState([] as any);\r\n\r\n\r\n    useEffect(() => {\r\n       Listar();\r\n    }, []);\r\n\r\n    const Salvar =()=>{\r\n        var metodo = \"\"\r\n        var url = \"\";\r\n        if(status == false){\r\n            metodo = \"PUT\";\r\n            url = \"http://localhost:5000/api/Medico/\"+id+\"\";\r\n        }else if(status == true){\r\n            metodo = \"POST\";\r\n            url = \"http://localhost:5000/api/Medico\";\r\n        }\r\n\r\n        var macro = [] as any;\r\n        medicoEspecialidades.map((item:any) =>{\r\n            macro.push({IdEspecialidade: item.id})\r\n        })\r\n        console.log(macro);\r\n\r\n        const user={\r\n            Nome: nome,\r\n            Email: email,\r\n            Crm: crm,\r\n            Senha: senha,\r\n            DataNascimento: \"1981-01-23T04:45:33.857Z\",\r\n            TelefoneFixo: teleFixo,\r\n            TelefoneCelular: celular,\r\n            Cep: cep,\r\n            Logradouro: logradouro,\r\n            Bairro: bairro,\r\n            Localidade: localidade,\r\n            Uf: uf,\r\n            Numero: numero,\r\n            IdTipoUsuario: 2,\r\n            TbMedicosEspecialidades: macro\r\n        }\r\n\r\n        console.log(JSON.stringify(user))\r\n        fetch(url,{\r\n             headers: {\r\n                'Content-Type': 'application/json'\r\n                //   authorization: 'Bearer ' + localStorage.getItem('Gcb-Caren-Token')\r\n                },\r\n            method: metodo,\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then(() => window.location.reload())\r\n        .catch((error) => console.error(error)); \r\n\r\n    };\r\n    const Listar = () =>{\r\n\r\n        const url = \"http://localhost:5000/api/Medico\";\r\n        fetch(url,{\r\n            // headers: {\r\n                //   authorization: 'Bearer ' + localStorage.getItem('Gcb-Caren-Token')\r\n                //},\r\n                method: 'GET',\r\n            })\r\n            .then((response) => response.json())\r\n            .then((dados) => {\r\n                setMedicos(dados);\r\n                console.log(dados);\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n    fetch('http://localhost:5000/api/Especialidade',{\r\n        // headers: {\r\n            //   authorization: 'Bearer ' + localStorage.getItem('Gcb-Caren-Token')\r\n            //},\r\n            method: 'GET',\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dados) => {\r\n            setSelects(dados);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    };\r\n\r\n    const removeEspecialidade = (idEspecialidade:any) =>{\r\n        let resposta = window.prompt(\"Digite 'excluir especialidade' para excluir essa especialidade desse mÃ©dico(a):\")?.toLowerCase();\r\n\r\n        if(resposta == \"excluir especialidade\"){\r\n            document.getElementById('card-item'+idEspecialidade+'')?.remove();\r\n\r\n            const url = \"http://localhost:5000/api/MedicoEspecialidade/\" + idEspecialidade;\r\n            fetch(url,{\r\n                //headers: {\r\n                  //     authorization: 'Bearer ' + localStorage.getItem('Gcb-Caren-Token')\r\n                    //},\r\n                method: 'DELETE'\r\n            })\r\n            .then(() => {\r\n                Listar();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    const removeContainer = (idEspecialidade:any) =>{\r\n        document.getElementById('card-item-temp'+idEspecialidade+'')?.remove();\r\n    }\r\n\r\n\r\n    const modal =(id:any)=>{\r\n        if(id !== null && id !== 0){\r\n            const url = \"http://localhost:5000/api/Medico/\"+id;\r\n            fetch(url,{\r\n                 //headers: {\r\n                  //     authorization: 'Bearer ' + localStorage.getItem('Gcb-Caren-Token')\r\n                    //},\r\n                    method: 'get'\r\n            })\r\n            .then((response) => response.json())\r\n            .then((dados) => {\r\n                setNome(dados.nome);\r\n                setEmail(dados.email);\r\n                setCrm(dados.crm);\r\n                setSenha(dados.senha);\r\n                setData(dados.dataNascimento);\r\n                setTeleFixo(dados.telefoneFixo);\r\n                setCelular(dados.telefoneCelular);\r\n\r\n                setCep(dados.cep);\r\n                setLogradouto(dados.logradouro);\r\n                setBairro(dados.bairro);\r\n                setLocalidade(dados.localidade);\r\n                setUf(dados.uf);\r\n                setNumero(dados.numero);\r\n                setId(dados.id);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n\r\n            fetch('http://localhost:5000/api/MedicoEspecialidade/List/id?id='+id+'',{\r\n                method: 'GET'\r\n            })\r\n            .then((response) => response.json())\r\n            .then((dados) => {\r\n                console.log(dados)\r\n                if(dados == \"Nenhuma especialidade mÃ©dica encontrada!!!\")\r\n                {\r\n                    setEspecialidade([]);\r\n                }\r\n                else\r\n                {\r\n                    setEspecialidade(dados);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n            setStatus(false);\r\n            setBotao(\"Atualizar\")\r\n        }else{\r\n            setBotao(\"Adicionar\")\r\n            setStatus(true);\r\n            setNome('');\r\n            setEmail('');\r\n            setEmail('');\r\n            setCrm('');\r\n            setSenha('');\r\n            setData('');\r\n            setTeleFixo('');\r\n            setCelular('');\r\n            setCep('');\r\n            setLogradouto('');\r\n            setBairro('');\r\n            setLocalidade('');\r\n            setUf('');\r\n            setNumero('');\r\n            setEspecialidade([]);\r\n            setMedicoEspecialidades([]);\r\n        }\r\n    }\r\n\r\n    const viacep =(num:any)=>{\r\n        const url = \"https://viacep.com.br/ws/\"+num+\"/json/\";\r\n        fetch(url,{\r\n            method: 'GET'\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dados) => {\r\n            setLogradouto(dados.logradouro);\r\n            setBairro(dados.bairro);\r\n            setLocalidade(dados.localidade);\r\n            setUf(dados.uf);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n\r\n    const excluir =(id:any)=>{\r\n        let resposta = window.prompt(\"Digite 'excluir medico' para excluir esse mÃ©dico(a):\")?.toLowerCase();\r\n\r\n        if(resposta == \"excluir medico\"){\r\n            const url = \"http://localhost:5000/api/Medico/\" + id;\r\n            fetch(url,{\r\n                //headers: {\r\n                  //     authorization: 'Bearer ' + localStorage.getItem('Gcb-Caren-Token')\r\n                    //},\r\n                method: 'DELETE'\r\n            })\r\n            .then(() => {\r\n                Listar();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    const Adicionar = () =>{ \r\n       var itemBuscado = selects.filter((x:any) => x.id == itemEspecial);\r\n       \r\n       var idItem = Object.values(itemBuscado[0])[0];\r\n       var tituloItem = Object.values(itemBuscado[0])[1];\r\n       var obj = {id: idItem, titulo:tituloItem};\r\n       setMedicoEspecialidades([ obj, ...medicoEspecialidades ]);\r\n    }\r\n\r\n    function Buscar(nome: string) { \r\n        if (medicos.length != 0) {\r\n            var buscados = medicos.filter((item: any) => item.nome.toUpperCase().includes(nome.toUpperCase()));\r\n            if (buscados != undefined)\r\n                return buscados; \r\n        }\r\n        return medicos; \r\n    }\r\n    return(\r\n        <div>\r\n            <Header/>\r\n        <div className=\"barra-cima\">\r\n            \r\n        <div className=\"input-container\">\r\n            <input value={medicoNome} onChange={e => setmedicoNome(e.target.value)} className=\"input-field\" type=\"text\"  placeholder=\"Digite o nome do mÃ©dico(a) para encontra-lo:\" name=\"usrnm\"/>\r\n            <i className=\"fas fa-search icon\"></i>\r\n        </div>\r\n        <button onClick={()=>{modal(0); setShowModel(true);}} className=\"btn\">Adicionar mÃ©dico(a)<i className=\"fas fa-plus icone\"></i></button>\r\n        </div>\r\n        <div className=\"container\">\r\n  <ul className=\"responsive-table\">\r\n    <li className=\"table-header\">\r\n      <div className=\"col col-1\">Nome do mÃ©dico(a)</div>\r\n      <div className=\"col col-2\">CRM</div>\r\n      <div className=\"col col-3\">Ver mais</div>\r\n      <div className=\"col col-4\">Deletar</div>\r\n    </li>\r\n    {\r\n    Buscar(medicoNome).map((item:any) =>{\r\n        return(\r\n            <li className=\"table-row\">\r\n            <div className=\"col col-1\">{item.nome}</div>\r\n            <div className=\"col col-2\">{item.crm}</div>\r\n            <div className=\"col col-3\"><img className=\"regular\" src={settigs} onClick={()=>{ modal(item.id); setShowModel(true);}} alt=\"configuraÃ§Ãµes\"/></div>\r\n            <div className=\"col col-4\"> <img className=\"regular\" src={close} onClick={()=> excluir(item.id)} alt=\"excluir mÃ©dico\"/></div>\r\n            </li>\r\n            )\r\n        })\r\n    }\r\n  </ul>\r\n</div>\r\n\r\n     <div style={{display: showModal? 'block' : 'none'}}>\r\n     <div id=\"myModal\" className=\"modal\">\r\n         <div className=\"modal-content\">\r\n         <span onClick={() => setShowModel(false)} className=\"close\">&times;</span>\r\n        <div className=\"containerInputs\">\r\n            <form\r\n            onSubmit={(event) => {\r\n                event.preventDefault();\r\n            }}\r\n            >\r\n\r\n        <div>\r\n             <input type=\"text\" onChange={e=> setNome(e.target.value)} maxLength={120} value={nome} placeholder=\"Nome\" />\r\n             <input type=\"text\" onChange={e=> setCrm(e.target.value)} maxLength={7} value={crm} placeholder=\"CRM\" />\r\n         </div>\r\n       \r\n             \r\n            <input type=\"email\"  maxLength={120} onChange={e=> setEmail(e.target.value)} value={email} placeholder=\"E-mail\"/>\r\n            <div>\r\n                <input type=\"text\" maxLength={15} onChange={e=> setTeleFixo(e.target.value)} value={teleFixo} placeholder=\"Telefone fixo\"/>\r\n                <input type=\"text\" maxLength={15} onChange={e=> setCelular(e.target.value)} value={celular} placeholder=\"Telefone celular\" />\r\n            </div>\r\n\r\n            <div className=\"form-pass\">\r\n                <input type=\"password\" maxLength={120} onChange={e=> setSenha(e.target.value)} value={senha} placeholder=\"Senha\" />\r\n                <input type=\"date\" onChange={e=> setData(e.target.value)} value={dataNascimento.toString().slice(0,10)}/>\r\n            </div>\r\n\r\n            <div className=\"cep\">\r\n                <input type=\"text\" maxLength={9} onChange={e=>{ viacep(e.target.value); setCep(e.target.value)}} value={cep} placeholder=\"CEP\"/>\r\n                <input type=\"text\" maxLength={120} onChange={e=> setLogradouto(e.target.value)} value={logradouro} placeholder=\"Logradouro\"/>\r\n            </div>\r\n\r\n            <div className=\"cep\">\r\n                <input type=\"text\" maxLength={120} onChange={e=> setBairro(e.target.value)} value={bairro} placeholder=\"Bairro\" />\r\n                <input type=\"text\" maxLength={120} onChange={e=> setLocalidade(e.target.value)} value={localidade} placeholder=\"Localidade\"/>\r\n            </div>\r\n\r\n            <div className=\"cep\">\r\n                <input type=\"text\" maxLength={5} onChange={e=> setUf(e.target.value)} value={uf} placeholder=\"UF\"/>\r\n                <input type=\"text\" maxLength={10} onChange={e=> setNumero(e.target.value)} value={numero} placeholder=\"NÃºmero\"/>\r\n            </div>\r\n\r\n            <h3>Especialidades</h3>\r\n            <select name=\"especialidades\" id=\"especial\" onChange={e => setItemEspecial(e.target.value)}>\r\n                <option selected={true} value=\"0\" disabled>Selecione</option>\r\n                {\r\n                    selects.map((item:any) =>{\r\n                        return(\r\n                            <option id={item.id} value={item.id}>{item.titulo}</option>\r\n                         )\r\n                    })\r\n                }\r\n            </select>\r\n              <button onClick={() => Adicionar()}>Adicionar</button>  \r\n\r\n            <div className=\"cards-container\">\r\n            {\r\n                especialidades.map((item:any)=>{\r\n                    return(\r\n                        <div className=\"cards\" id={\"card-item\"+item.id+\"\"}>{item.idEspecialidadeNavigation.titulo} \r\n                        <img className=\"regular\" src={close} onClick={()=> removeEspecialidade(item.id)} alt=\"Excluir especialidade do mÃ©dico(a)\"/>\r\n                        </div>\r\n                        )\r\n                    })\r\n                    \r\n                }\r\n                {\r\n                medicoEspecialidades.map((item:any)=>{\r\n                    return(\r\n                        <div className=\"cards\" id={'card-item-temp'+item.id+''}>\r\n                            {item.titulo}\r\n                            <img className=\"regular\" src={close} onClick={()=> removeContainer(item.id)} alt=\"Excluir especialidade do mÃ©dico(a)\"/>\r\n                        </div>\r\n                        )\r\n                    })\r\n                    \r\n                }\r\n            </div>\r\n            <button onClick={() => Salvar()}>{botao}</button>\r\n            </form>\r\n        </div>\r\n         </div>\r\n     </div>\r\n </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Panel;","C:\\Users\\henri\\Desktop\\GCB_Investimentos\\React - GCB_Care\\gcb-care\\src\\componentes\\header.tsx",["52","53","54"],"import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport logo from '../assets/imagens/logotipo.png';\r\nimport { parseJWT } from '../services/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Header = () =>{\r\n\r\n  var idUser = localStorage.getItem(\"GCB-CAREN-ID-USER\");\r\n  useEffect(() => {\r\n   getUser(idUser);\r\n  }, [])\r\n\r\n  let history = useHistory();\r\n\r\n  const[nomeUser, setNomeUser] = useState('');\r\n\r\n  const sair = () => {\r\n    localStorage.removeItem('Gcb-Caren-Token');\r\n    history.push('/');\r\n}\r\n\r\nconst getUser =(id:any)=>{\r\n  const url = \"http://localhost:5000/api/Usuario/\"+id+\"\";\r\n  fetch(url,{\r\n      method: 'GET'\r\n  })\r\n  .then((response) => response.json())\r\n  .then((dados) => {\r\n     setNomeUser(dados.nome)\r\n  })\r\n  .catch(err => {\r\n      console.error(err);\r\n  })\r\n}\r\n\r\n  const menu = () =>{\r\n\r\n      if (parseJWT() == 1) {\r\n      return(\r\n      <div>\r\n        <div className=\"header\">\r\n          <div className=\"ajuste\">\r\n          <a href={'/Panel'}><img className=\"logotipo\" src={logo} alt=\"logotipo GCB Care\"/></a>\r\n          <h2>Seja Bem-vindo, {nomeUser}</h2>\r\n          </div>\r\n        \r\n          <div className=\"header-right\">\r\n          <a className=\"active\"onClick={e =>{\r\n            e.preventDefault();\r\n            sair();\r\n          }}>Sair</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  }\r\n  return(\r\n    <div>\r\n      {\r\n        menu()\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Header;",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":17,"column":89,"nodeType":"63","messageId":"64","endLine":17,"endColumn":91},{"ruleId":"65","severity":1,"message":"66","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":19},{"ruleId":"61","severity":1,"message":"69","line":30,"column":33,"nodeType":"63","messageId":"64","endLine":30,"endColumn":35},{"ruleId":"65","severity":1,"message":"70","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":12},{"ruleId":"65","severity":1,"message":"71","line":10,"column":9,"nodeType":"67","messageId":"68","endLine":10,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":44,"column":19,"nodeType":"63","messageId":"64","endLine":44,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":47,"column":25,"nodeType":"63","messageId":"64","endLine":47,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":53,"column":45,"nodeType":"74","messageId":"75","endLine":53,"endColumn":47},{"ruleId":"61","severity":1,"message":"62","line":121,"column":21,"nodeType":"63","messageId":"64","endLine":121,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":182,"column":26,"nodeType":"63","messageId":"64","endLine":182,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":239,"column":21,"nodeType":"63","messageId":"64","endLine":239,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":257,"column":57,"nodeType":"63","messageId":"64","endLine":257,"endColumn":59},{"ruleId":"61","severity":1,"message":"69","line":266,"column":28,"nodeType":"63","messageId":"64","endLine":266,"endColumn":30},{"ruleId":"61","severity":1,"message":"69","line":268,"column":26,"nodeType":"63","messageId":"64","endLine":268,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":12,"column":6,"nodeType":"78","endLine":12,"endColumn":8,"suggestions":"79"},{"ruleId":"61","severity":1,"message":"62","line":39,"column":22,"nodeType":"63","messageId":"64","endLine":39,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":49,"column":11,"nodeType":"82","endLine":52,"endColumn":14},{"ruleId":"57","replacedBy":"83"},{"ruleId":"59","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'stringify' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'lupa' is defined but never used.","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idUser'. Either include it or remove the dependency array.","ArrayExpression",["87"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["85"],["86"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [idUser]",{"range":"90","text":"91"},[355,357],"[idUser]"]