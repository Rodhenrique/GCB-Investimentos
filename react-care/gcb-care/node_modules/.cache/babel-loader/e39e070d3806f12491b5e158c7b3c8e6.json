{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\henri\\\\Desktop\\\\GCB_Investimentos\\\\React - GCB_Care\\\\gcb-care\\\\src\\\\views\\\\Login\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\nimport logo from '../../assets/imagens/logotipo.png';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login() {\n  _s();\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n\n  const login = () => {\n    const login = {\n      email: email,\n      senha: senha\n    };\n    const url = \"http://localhost:5000/api/Login\";\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(login),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(dados => {\n      if (dados.token != undefined) {\n        localStorage.setItem(\"Gcb-Caren-Token\", dados.token);\n        console.log(dados.token);\n        history.push(\"/Panel\");\n      } else alert(\"Email ou senha inválidos\");\n    }).catch(error => console.error(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => {\n            event.preventDefault();\n            login();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logo\",\n            src: logo,\n            alt: \"Logo da empresa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs-container d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"Digite seu email:\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"senha\",\n              type: \"password\",\n              placeholder: \"Digite sua senha:\",\n              onChange: e => setSenha(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"button-submit\",\n            value: \"Entrar\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"p+sZXUHCviRaAU0BgLtxvLZAT8M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/henri/Desktop/GCB_Investimentos/React - GCB_Care/gcb-care/src/views/Login/index.tsx"],"names":["React","useState","logo","useHistory","Login","history","email","setEmail","senha","setSenha","login","url","fetch","method","body","JSON","stringify","headers","then","response","json","dados","token","undefined","localStorage","setItem","console","log","push","alert","catch","error","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './style.css';\r\nimport logo from '../../assets/imagens/logotipo.png';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { stringify } from 'querystring';\r\n\r\nfunction Login(){\r\n    let history = useHistory();\r\n\r\n    const [email, setEmail] = useState(\"\"); \r\n    const [senha, setSenha] = useState(\"\"); \r\n\r\n    const login =()=>{\r\n\r\n        const login = {\r\n            email: email,\r\n            senha: senha\r\n        };\r\n        const url = \"http://localhost:5000/api/Login\";\r\n\r\n        fetch(url,{\r\n            method: 'POST',\r\n            body: JSON.stringify(login),\r\n            headers: {\r\n                \"content-type\": \"application/json\", \r\n            },\r\n        })\r\n        .then((response) => response.json())\r\n            .then((dados) => {\r\n                if (dados.token != undefined) {\r\n                    localStorage.setItem(\"Gcb-Caren-Token\", dados.token); \r\n                    console.log(dados.token);\r\n                    history.push(\"/Panel\"); \r\n                } else alert(\"Email ou senha inválidos\"); \r\n            })\r\n            \r\n            .catch((error) => console.error(error)); \r\n    };\r\n\r\n    return(\r\n    <div>\r\n       <div className=\"login-container\">\r\n        <div className=\"login-panel\">\r\n            <form  onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        login();\r\n                    }}>\r\n                    <img className=\"logo\" src={logo} alt=\"Logo da empresa\"/>\r\n                <div className=\"inputs-container d-flex flex-column\">\r\n                    <input name=\"email\" type=\"email\" placeholder=\"Digite seu email:\" onChange={(e) => setEmail(e.target.value)}/>\r\n                    <input name=\"senha\" type=\"password\" placeholder=\"Digite sua senha:\" onChange={(e) => setSenha(e.target.value)} />\r\n                </div>\r\n                <input className=\"button-submit\" value=\"Entrar\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}