{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\henri\\\\Desktop\\\\GCB_Investimentos\\\\React - GCB_Care\\\\gcb-care\\\\src\\\\routers.tsx\";\nimport React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { parseJWT } from './services/auth';\nimport Panel from './views/Administrador';\nimport Login from './views/Login';\n\nfunction Routers() {\n  const RotaComum = ({\n    component: Component,\n    path,\n    ...rest\n  }) => {\n    var token = localStorage.getItem(\"Gcb-Caren-Token\");\n    return /*#__PURE__*/_jsxDEV(Route, {\n      render: props => token === undefined || token === null ? /*#__PURE__*/_jsxDEV(Component, {\n        path: path,\n        ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  };\n\n  const RotaAdm = ({\n    component: Component,\n    path,\n    ...rest\n  }) => {\n    var token = localStorage.getItem(\"Gcb-Caren-Token\");\n    return /*#__PURE__*/_jsxDEV(Route, {\n      render: props => (token !== undefined || token !== null) && parseJWT() == 1 ? /*#__PURE__*/_jsxDEV(Component, {\n        path: path,\n        ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RotaAdm, {\n        path: \"/Panel\",\n        component: Panel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Routers;\nexport default Routers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routers\");","map":{"version":3,"sources":["C:/Users/henri/Desktop/GCB_Investimentos/React - GCB_Care/gcb-care/src/routers.tsx"],"names":["React","BrowserRouter","Redirect","Route","Switch","parseJWT","Panel","Login","Routers","RotaComum","component","Component","path","rest","token","localStorage","getItem","props","undefined","pathname","state","from","location","RotaAdm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,SAASC,OAAT,GAAmB;AAMf,QAAMC,SAA+B,GAAG,CAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,IAAxB;AAA8B,OAAGC;AAAjC,GAAD,KAA6C;AACjF,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAZ;AACA,wBACI,QAAC,KAAD;AACI,MAAA,MAAM,EAAEC,KAAK,IAAKH,KAAK,KAAKI,SAAV,IAAuBJ,KAAK,KAAK,IAAlC,gBAET,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEF,IAAjB;AAAA,WAA4BC,IAA5B;AAAA,WAAsCI;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFS,gBAIT,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE,GAAZ;AAAiBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAAxB;AAAd;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAZD;;AAcA,QAAMC,OAA6B,GAAG,CAAC;AAAEb,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,IAAxB;AAA8B,OAAGC;AAAjC,GAAD,KAA6C;AAC/E,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAZ;AACA,wBACI,QAAC,KAAD;AACI,MAAA,MAAM,EAAEC,KAAK,IAAK,CAACH,KAAK,KAAKI,SAAV,IAAuBJ,KAAK,KAAK,IAAlC,KAA2CT,QAAQ,MAAM,CAA1D,gBAET,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEO,IAAjB;AAAA,WAA4BC,IAA5B;AAAA,WAAsCI;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFS,gBAIT,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE,GAAZ;AAAiBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAAxB;AAAd;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAZD;;AAcA,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEf;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,SAAS,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KA1CQE,O;AA4CT,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { parseJWT } from './services/auth';\r\nimport Panel from './views/Administrador';\r\nimport Login from './views/Login';\r\n\r\nfunction Routers() {\r\n    interface RouteProps {\r\n        component: any;\r\n        path: any;\r\n    }\r\n\r\n    const RotaComum: React.FC<RouteProps> = ({ component: Component, path, ...rest }) => {\r\n        var token = localStorage.getItem(\"Gcb-Caren-Token\");\r\n        return (\r\n            <Route\r\n                render={props => (token === undefined || token === null) ?\r\n                    (\r\n                        <Component path={path}  {...rest} {...props} />\r\n                    ) : (\r\n                        <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n                    )\r\n                } />\r\n        )\r\n    }\r\n\r\n    const RotaAdm: React.FC<RouteProps> = ({ component: Component, path, ...rest }) => {\r\n        var token = localStorage.getItem(\"Gcb-Caren-Token\");\r\n        return (\r\n            <Route\r\n                render={props => ((token !== undefined || token !== null) && parseJWT() == 1) ?\r\n                    (\r\n                        <Component path={path}  {...rest} {...props} />\r\n                    ) : (\r\n                        <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n                    )\r\n                } />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" component={Login} />\r\n                <RotaAdm path=\"/Panel\" component={Panel}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routers;"]},"metadata":{},"sourceType":"module"}